# 공통 설정 (모든 환경에서 사용)
spring:
  # Docker Compose 자동 실행 기능 비활성화
  docker:
    compose:
      enabled: false

  # 기본 프로필을 'dev'로 설정
  profiles:
    active: dev

  # Thymeleaf 캐시 비활성화 (개발 중 즉시 반영)
  thymeleaf:
    cache: false

  sql:
    init:
      mode: never

  jpa:
    defer-datasource-initialization: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true

  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    clean-disabled: true
    # baseline-version: 1     # (기본값 1, 필요 시 명시)

  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: email

# Gemini API 키 설정 (환경변수에서 가져옴)
gemini:
  api-key: ${GEMINI_API_KEY}

# Alan API 키 설정 (환경변수에서 가져옴)
alan:
  client-id: ${ALAN_CLIENT_ID}

---

# 개발(dev) 환경 설정
spring:
  config:
    activate:
      on-profile: "dev"

  # PostgreSQL 설정 (개발용)
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/devview_dev
    username: postgres
    password: ${DEV_DB_PASSWORD}

  # JPA 설정 (DDL은 Flyway가 담당, JPA는 검증/동작만)
  jpa:
    hibernate:
      ddl-auto: none
    generate-ddl: false
    properties:
      hibernate.hbm2ddl.auto: none
      jakarta.persistence.schema-generation.database.action: none
      javax.persistence.schema-generation.database.action: none

---

# 운영(prod) 환경 설정
spring:
  config:
    activate:
      on-profile: "prod"

  # PostgreSQL 설정 (운영용)
  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        show_sql: false

# AWS S3 설정
aws:
  credentials:
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    bucket: devview-allinone
    region: ap-northeast-2  # 서울 리전
  region:
    static: ap-northeast-2

# 앱 설정
app:
  upload-dir: uploads  # 기존 설정 유지 (백업용)
  use-s3: true  # S3 사용 여부 플래그